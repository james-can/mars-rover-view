{"version":3,"sources":["DynamicPreloadedImage.js","App.js","serviceWorker.js","index.js"],"names":["DynamicPreloadedImage","props","react_default","a","createElement","style","margin","width","height","concat","aspect","src","hidden","show","rovers","curiosity","opportunity","spirit","setManifest","json","console","log","roverName","photo_manifest","name","toLowerCase","newPhotoArray","photos","i","sol","j","length","max_sol","push","earth_date","total_photos","cameras","initializeManifest","index","fetchurl","fetch","then","response","catch","ex","Object","keys","cam","abbrev","full","classCallCheck","this","_abbrev","_full","cams","roverCams","map","item","roverNames","App","_this","possibleConstructorReturn","getPrototypeOf","call","getAvailablePhotos","setState","prevState","photosAvailable","rover","handleLoadClick","ev","fetchUrl","state","self","assertThisInitialized","images","img","Image","img_src","onload","onerror","totalPhotos","imageObjects","handleCamChange","target","value","handleSliderChange","sliderValue","handleRoverChange","handleSolChange","test","parseInt","_this2","classes","Fragment","CssBaseline_default","AppBar_default","position","className","appBar","Toolbar_default","Typography_default","variant","color","noWrap","heroUnit","heroContent","component","align","gutterBottom","brief","paragraph","Grid_default","container","spacing","justify","alignItems","xs","sm","FormControl_default","formControl","InputLabel_default","shrink","Select_default","onChange","input","Input_default","displayEmpty","selectEmpty","MenuItem_default","FormHelperText_default","key","TextField_default","solSpinner","label","type","helperText","InputLabelProps","Button_default","onClick","button","Slider_default","slider","min","max","step","classNames","layout","cardGrid","imageContainer","alt","React","Component","withStyles","theme","padding","unit","totalSolDisplay","minHeight","backgroundColor","palette","background","paper","maxWidth","defineProperty","marginLeft","marginRight","breakpoints","up","camera","minWidth","fontSize","withTheme","Boolean","window","location","hostname","match","someTheme","createMuiTheme","secondary","main","primary","ReactDOM","render","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8f2d156.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default (props) =>{\r\n    return (\r\n        <img style={{ margin: '0 auto', width: '100%', height: `${1 / props.aspect}%`}} src={props.src} hidden={!props.show}/>\r\n    )\r\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/lab/Slider';\nimport DynamicPreloadedImage from './DynamicPreloadedImage'\nimport 'whatwg-fetch';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\n\n//manifest objects to store useful information about each rover\nconst rovers = {curiosity: {}, opportunity: {}, spirit: {}};\n\n\n\n\n\nconst setManifest = (json) => {\n  console.log('json: ' + json);\n  var roverName = json.photo_manifest.name.toLowerCase();\n  rovers[roverName] = json.photo_manifest;\n\n  var newPhotoArray = [];\n\n  const { photos } = json.photo_manifest;\n\n\n  // since the sols with 0 photos completely omit the element from the array,\n  // re-map the array with placeholder elements with value of 0 to make  \n  // it easier to navigate\n\n  for(let i = photos[0].sol, j = 0; newPhotoArray.length < rovers[roverName].max_sol; i++){\n    newPhotoArray.push(photos[j].sol === i ? photos[j++] : {sol: i , earth_date: '', total_photos: 0 , cameras: []});\n  }\n\n  rovers[roverName].photos = newPhotoArray;\n};\n\nconst initializeManifest = (index) =>{\n  \n  let fetchurl = `https://shielded-woodland-10835.herokuapp.com/manifests/${index}`;\n  console.log('fetchurl: ' + fetchurl);\n  fetch(fetchurl)\n  .then((response) => {\n    return response.json()\n  }).then(setManifest).catch((ex) => {\n    console.log('parsing failed', ex);\n    console.log('typeof ex: ' + typeof ex);\n\n    if(typeof ex == 'object'){\n      console.log('ex keys: ' + Object.keys(ex));\n    }\n\n    initializeManifest(index);\n  });\n\n}\n\nfor(let i in rovers){\n  initializeManifest(i);\n}\n\nconst styles = (theme) => {\n  \n  return {\n    slider:{\n      padding: theme.spacing.unit\n      \n    },\n    totalSolDisplay:{\n      \n    },\n    solSpinner:{\n      \n    },\n    imageContainer:{\n      minHeight: '1000px',\n    },\n    appBar: {\n      position: 'relative',\n      width: '100%'\n    },\n    button:{\n      margin: theme.spacing.unit\n    },\n    heroUnit: {\n      backgroundColor: theme.palette.background.paper,\n      width: '100%'\n    },\n    heroContent: {\n      maxWidth: 600,\n      margin: '0 auto',\n      padding: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 3}px`,\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n        width: 1100,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    cardGrid: {\n      padding: `${theme.spacing.unit * 8}px 0`,\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      width: 120,\n\n    },\n    camera:{\n      minWidth: 80\n    },\n    brief:{\n      fontSize: '.75em'\n    }\n  }\n};\n\nclass cam{\n  constructor(abbrev, full){\n    this._abbrev = abbrev;\n    this._full = full;\n  }\n  get abbrev(){\n    return this._abbrev;\n  }\n  get full(){\n    return this._full;\n  }\n}\n\nconst cams = [\n  new cam('fhaz', 'Front Hazard Avoidance'),\n  new cam('rhaz', 'Rear Hazard Avoidance'),\n  new cam('mast', 'Mast'),\n  new cam('chemcam', 'Chemistry and Camera Complex'),\n  new cam('mahli', 'Mars Hand Lens Imager'),\n  new cam('mardi', 'Mars Descent Imager'),\n  new cam('navcam', 'Navigation'),\n  new cam('pancam', 'Panoramic'),\n  new cam('minites', 'Miniature Thermal Emission Spectrometer')\n];\n\nconst roverCams = [\n  [0,1,2,3,4,5,6].map((item)=> cams[item]),\n  [0,1,6,7,8].map((item)=> cams[item]),\n  [0,1,6,7,8].map((item)=> cams[item])\n];\n\nconst roverNames = ['curiosity', 'opportunity', 'spirit'];\n\nclass App extends React.Component{\n  constructor(props){\n    \n    super(props);\n    this.state = {\n      sliderValue: 0,\n      rover: 0,\n      totalPhotos:0,\n      cam: 'mast',\n      sol: 0,\n      photosAvailable: 3702,\n      imageObjects:[],\n      photos: []\n    }\n  }\n\n  getAvailablePhotos = () =>{\n    if(rovers.curiosity.photos && rovers.opportunity.photos && rovers.spirit.photos){\n      this.setState((prevState, props)=>({\n        photosAvailable : rovers[roverNames[prevState.rover]].photos[prevState.sol].total_photos\n      }));\n    }\n  }\n\n  handleLoadClick = (ev) => {\n    const fetchUrl = `https://shielded-woodland-10835.herokuapp.com/${roverNames[this.state.rover]}/${this.state.sol}/${this.state.cam}`;\n    const self = this;\n    fetch(fetchUrl)\n    .then(function(response) {\n      return response.json()\n    }).then(function(json) {\n     \n      // Thought I needed promises, but looks like I can let the user\n      // start browsing the partially loaded photos before they're all \n      // loaded.\n\n      // Will leave it commented for now but probably will delete it entirely\n      //var promises = [];\n      \n      var images = [];\n      \n      for(let i in json.photos){\n        let img = new Image();\n        img.src = json.photos[i].img_src;\n        //promises.push(new Promise((resolve, reject)=>{\n          img.onload = () =>{\n            //resolve(img.src);\n          }\n          img.onerror = () =>{\n            //reject(img.src);\n          }\n        //}));\n\n        images.push(img);\n      }\n\n      self.setState({\n        totalPhotos: json.photos.length,\n        photos: json.photos,\n        imageObjects: images\n      });\n\n      \n\n      /* Promise.all(promises).then(()=>{\n        console.log('all images loaded');\n      }).catch((errUrl)=>{\n        console.log('failed to load: ' + errUrl);\n      }); */\n\n    }).catch(function(ex) {\n      console.log('parsing failed', ex)\n    });\n  }\n\n  handleCamChange = (ev) =>{\n    console.log('handleCamChange, event: ' + ev);\n    this.setState({\n      cam: ev.target.value\n    });\n  }\n  \n  handleSliderChange = (ev, value) =>{\n    this.setState({\n      sliderValue: value\n    });\n  }\n\n  handleRoverChange = (ev) =>{\n    console.log('rovername: ' + Object.keys(rovers[roverNames[this.state.rover]]));\n    console.log('maxsol: ' + rovers[roverNames[this.state.rover]].max_sol);\n    this.setState({\n      rover: ev.target.value, \n      sol: 0,\n      cam: ev.target.value === 0 ? 'mast' : 'pancam'\n    });\n    this.getAvailablePhotos();\n  }\n\n  handleSolChange = (ev) =>{\n    if(/^\\d+$/.test(ev.target.value) &&  ev.target.value >= 0  && ev.target.value < rovers[roverNames[this.state.rover]].max_sol ){\n      this.setState({sol: parseInt(ev.target.value)});\n      this.getAvailablePhotos();\n    }\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n     \n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography  variant=\"h6\" color=\"inherit\" noWrap>\n            Rover View\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Rover View\n              </Typography>\n              <Typography className={classes.brief} variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                Choose a rover, camera, and sol(Martian day, starting from the beginning of the mission), click load, and use the slider to animate the images\n              </Typography>\n              <div >\n                <Grid container spacing={16} justify=\"space-evenly\" alignItems=\"center\" >\n                  <Grid item xs={6} sm={3} >\n                  <Grid container justify=\"center\">\n                  <FormControl className={classes.formControl}>\n                  <InputLabel shrink >\n                    Rover\n                  </InputLabel>\n                  <Select\n                    value={this.state.rover}\n                    onChange={this.handleRoverChange}\n                    input={<Input name=\"rover\"/>}\n                    displayEmpty\n                    name=\"rover\"\n                    className={classes.selectEmpty}\n                  >\n\n                  \n                  <MenuItem value={0}>Curiosity</MenuItem>\n                  <MenuItem value={1}>Opportunity</MenuItem>\n                  <MenuItem value={2}>Spirit</MenuItem>\n                  \n                </Select>\n                <FormHelperText/>\n                    </FormControl>\n                  </Grid>\n                  </Grid>\n                  <Grid item xs={6} sm={3} >\n                  \n                  <FormControl className={classes.formControl}>\n                  <InputLabel shrink >\n                    Camera\n                  </InputLabel>\n                  <Select\n                    value={this.state.cam}\n                    onChange={this.handleCamChange}\n                    input={<Input name=\"cam\"/>}\n                    displayEmpty\n                    name=\"cam\"\n                    className={classes.selectEmpty}\n                    \n                  >\n                  \n                  {roverCams[this.state.rover].map((item, index) => <MenuItem key={index} value={item.abbrev}>{item.full} </MenuItem>)}\n                  \n                </Select>\n                <FormHelperText></FormHelperText>\n            \n                    </FormControl>\n                 \n                  </Grid>\n                  <Grid item xs={6} sm={3} >\n                  <Grid container justify=\"center\">\n                  <FormControl className={classes.formControl}>\n                  <TextField \n                    className={classes.solSpinner}\n                    label=\"Sol\"\n                    value={this.state.sol}\n                    onChange={this.handleSolChange}\n                    type=\"number\"\n                    helperText={`of ${rovers[roverNames[this.state.rover]].max_sol - 1 || 2350}`}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    \n                  />\n                  </FormControl>\n                  </Grid>\n                  </Grid>\n                  <Grid item xs={6} sm={3}>\n                  \n                  <Button onClick={this.handleLoadClick} variant=\"contained\" color=\"primary\" className={classes.button} >\n                    Load\n                  </Button>\n                  <FormHelperText>{this.state.photosAvailable} photos available</FormHelperText>\n                  </Grid>\n                  \n                  <Grid item xs={10}>\n                  <Slider\n                    \n                    className={ classes.slider }\n                    value={this.state.sliderValue}\n                    min={1}\n                    max={this.state.totalPhotos}\n                    step={1}\n                    onChange={this.handleSliderChange}\n                  />\n                  </Grid>\n                  <Grid item xs={2}>\n                  <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                    {this.state.sliderValue}\n                  </Typography>\n                  </Grid>\n\n                </Grid>\n\n                \n              </div>\n            </div>\n          </div>\n          <div className={classNames(classes.layout, classes.cardGrid)}>\n            {/* End hero unit */}\n            <Grid container spacing={16}  className={classes.imageContainer}>\n            {this.state.imageObjects.map((item, index)=><DynamicPreloadedImage aspect={item.width/item.height} show={this.state.sliderValue - 1 === index} src={item.src} key={item.src} alt={`frame ${index}`}/>)}\n              \n            </Grid>\n          </div>\n        </main>\n        </React.Fragment>\n      \n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles,{withTheme: false})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport blue from '@material-ui/core/colors/blue';\n\nconst someTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        \n        secondary: {\n          main: '#b71c1c',\n        },\n        primary: {\n            main: '#ab5810',\n          },\n      },\n});\n\nReactDOM.render(<MuiThemeProvider theme={someTheme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}